class suspend_resume implements Runnable{
	String message;
	Boolean suspend_flag;
	suspend_resume(String thread_name){
		Thread t = new Thread(this,thread_name);
		message = thread_name;
		t.start();
	}
	public void run() {
		for(int i = 0 ; i <= 15; i++) {
			System.out.println("Thread "+ message + i);
			try {Thread.sleep(1000);}catch (Exception e) {}
		}
		
		while(suspend_flag) {
			try {wait();} catch (InterruptedException e) {e.printStackTrace();}
		}
	}
	
	public void suspend() {
		suspend_flag = true;
	}
	
	public void resume() {
		suspend_flag = false;
		notify();
		
	}
	
}
public class MultiThreading_8_Suspent_Resume {
	public static void main() {
		suspend_resume obj1 = new suspend_resume("Thread1");
		suspend_resume obj2 = new suspend_resume("Thread2");
		
	}
}
